{"ast":null,"code":"var _jsxFileName = \"/Users/dheeraj/Desktop/To-Do App/todo-frontend/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm() {\n  _s();\n  // Local state to store form data\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n\n  // Adjust these values as needed; they should correspond to an existing project and user in your backend.\n  const projectId = 1;\n  const userId = 1;\n  const createTask = e => {\n    e.preventDefault();\n    const newTask = {\n      title,\n      description,\n      dueDate,\n      status: 'OPEN'\n    };\n\n    // POST request to your Spring Boot backend API\n    fetch(`http://localhost:8080/api/tasks?projectId=${projectId}&userId=${userId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTask)\n    }).then(response => response.json()).then(data => {\n      console.log('Task created:', data);\n      // Clear form fields after creation\n      setTitle('');\n      setDescription('');\n      setDueDate('');\n      // Optionally, trigger a refresh in TaskList (see below)\n      window.location.reload();\n    }).catch(error => console.error('Error creating task:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createTask,\n    className: \"task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Due Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"YbXCse7ZAglTdO948A2hkY9z/jE=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","_s","title","setTitle","description","setDescription","dueDate","setDueDate","projectId","userId","createTask","e","preventDefault","newTask","status","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","window","location","reload","catch","error","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/dheeraj/Desktop/To-Do App/todo-frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TaskForm() {\n  // Local state to store form data\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n\n  // Adjust these values as needed; they should correspond to an existing project and user in your backend.\n  const projectId = 1;\n  const userId = 1;\n\n  const createTask = (e) => {\n    e.preventDefault();\n    const newTask = {\n      title,\n      description,\n      dueDate,\n      status: 'OPEN'\n    };\n\n    // POST request to your Spring Boot backend API\n    fetch(`http://localhost:8080/api/tasks?projectId=${projectId}&userId=${userId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTask)\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Task created:', data);\n        // Clear form fields after creation\n        setTitle('');\n        setDescription('');\n        setDueDate('');\n        // Optionally, trigger a refresh in TaskList (see below)\n        window.location.reload();\n      })\n      .catch((error) => console.error('Error creating task:', error));\n  };\n\n  return (\n    <form onSubmit={createTask} className=\"task-form\">\n      <h2>Create Task</h2>\n      <div>\n        <label>Title: </label>\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n        />\n      </div>\n      <div>\n        <label>Description: </label>\n        <textarea\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          required\n        />\n      </div>\n      <div>\n        <label>Due Date: </label>\n        <input\n          type=\"date\"\n          value={dueDate}\n          onChange={(e) => setDueDate(e.target.value)}\n          required\n        />\n      </div>\n      <button type=\"submit\">Create Task</button>\n    </form>\n  );\n}\n\nexport default TaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}