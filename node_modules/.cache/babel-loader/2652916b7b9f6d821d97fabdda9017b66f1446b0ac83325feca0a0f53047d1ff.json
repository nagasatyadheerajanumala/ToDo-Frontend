{"ast":null,"code":"var _jsxFileName = \"/Users/dheeraj/Desktop/To-Do App/todo-frontend/src/components/Projects/ProjectList.js\",\n  _s = $RefreshSig$();\n// src/components/Projects/ProjectList.js\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardContent, Typography, Button, Grid, TextField, Box } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectList() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [projectName, setProjectName] = useState('');\n  const token = localStorage.getItem('jwtToken');\n\n  // Fetch the list of projects\n  const fetchProjects = () => {\n    if (!token) {\n      console.error('No JWT token found.');\n      return;\n    }\n    fetch('http://localhost:8080/api/projects', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(`Failed to fetch projects: ${res.statusText}`);\n      }\n      return res.json();\n    }).then(data => {\n      console.log('Fetched projects:', data);\n      setProjects(data);\n    }).catch(err => console.error('Error fetching projects:', err));\n  };\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  // Create a new project\n  const createProject = async e => {\n    e.preventDefault();\n    if (!projectName.trim()) {\n      console.warn('Project name is empty.');\n      return;\n    }\n    if (!token) {\n      console.error('No JWT token found.');\n      return;\n    }\n    const url = `http://localhost:8080/api/projects?name=${encodeURIComponent(projectName)}`;\n    console.log('Sending POST request to:', url);\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Project creation failed: ${response.status} ${errorText}`);\n      }\n      const newProject = await response.json();\n      console.log('Project created successfully:', newProject);\n      setProjectName('');\n      fetchProjects(); // Refresh the project list\n    } catch (error) {\n      console.error('Error creating project:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Your Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: createProject,\n      sx: {\n        mb: 4,\n        display: 'flex',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Project Name\",\n        variant: \"outlined\",\n        value: projectName,\n        onChange: e => setProjectName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), projects.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"No projects found. Create a project!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), project.owner && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Owner: \", project.owner.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              component: Link,\n              to: `/projects/${project.id}`,\n              sx: {\n                mt: 2\n              },\n              children: \"Open Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectList, \"MIxi8a5JLfO9Uu8D00u1ITzMmr0=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","Typography","Button","Grid","TextField","Box","Link","jsxDEV","_jsxDEV","ProjectList","_s","projects","setProjects","projectName","setProjectName","token","localStorage","getItem","fetchProjects","console","error","fetch","headers","Authorization","then","res","ok","Error","statusText","json","data","log","catch","err","createProject","e","preventDefault","trim","warn","url","encodeURIComponent","response","method","errorText","text","status","newProject","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","onSubmit","sx","mb","display","gap","label","value","onChange","target","required","type","color","length","container","spacing","map","project","item","xs","md","name","owner","username","to","id","mt","_c","$RefreshReg$"],"sources":["/Users/dheeraj/Desktop/To-Do App/todo-frontend/src/components/Projects/ProjectList.js"],"sourcesContent":["// src/components/Projects/ProjectList.js\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardContent, Typography, Button, Grid, TextField, Box } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nfunction ProjectList() {\n  const [projects, setProjects] = useState([]);\n  const [projectName, setProjectName] = useState('');\n\n  const token = localStorage.getItem('jwtToken');\n\n  // Fetch the list of projects\n  const fetchProjects = () => {\n    if (!token) {\n      console.error('No JWT token found.');\n      return;\n    }\n    fetch('http://localhost:8080/api/projects', {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(`Failed to fetch projects: ${res.statusText}`);\n        }\n        return res.json();\n      })\n      .then((data) => {\n        console.log('Fetched projects:', data);\n        setProjects(data);\n      })\n      .catch((err) => console.error('Error fetching projects:', err));\n  };\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  // Create a new project\n  const createProject = async (e) => {\n    e.preventDefault();\n    if (!projectName.trim()) {\n      console.warn('Project name is empty.');\n      return;\n    }\n    if (!token) {\n      console.error('No JWT token found.');\n      return;\n    }\n    const url = `http://localhost:8080/api/projects?name=${encodeURIComponent(projectName)}`;\n    console.log('Sending POST request to:', url);\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Project creation failed: ${response.status} ${errorText}`);\n      }\n      const newProject = await response.json();\n      console.log('Project created successfully:', newProject);\n      setProjectName('');\n      fetchProjects(); // Refresh the project list\n    } catch (error) {\n      console.error('Error creating project:', error);\n    }\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h5\" gutterBottom>\n        Your Projects\n      </Typography>\n      {/* Project Creation Form */}\n      <Box component=\"form\" onSubmit={createProject} sx={{ mb: 4, display: 'flex', gap: 2 }}>\n        <TextField\n          label=\"Project Name\"\n          variant=\"outlined\"\n          value={projectName}\n          onChange={(e) => setProjectName(e.target.value)}\n          required\n        />\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Create Project\n        </Button>\n      </Box>\n      {/* Project List */}\n      {projects.length === 0 ? (\n        <Typography variant=\"body1\">No projects found. Create a project!</Typography>\n      ) : (\n        <Grid container spacing={2}>\n          {projects.map((project) => (\n            <Grid item xs={12} md={6} key={project.id}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h6\">{project.name}</Typography>\n                  {project.owner && (\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Owner: {project.owner.username}\n                    </Typography>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    component={Link}\n                    to={`/projects/${project.id}`}\n                    sx={{ mt: 2 }}\n                  >\n                    Open Project\n                  </Button>\n                </CardContent>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      )}\n    </div>\n  );\n}\n\nexport default ProjectList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}