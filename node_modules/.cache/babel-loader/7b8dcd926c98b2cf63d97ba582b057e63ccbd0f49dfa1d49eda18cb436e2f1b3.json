{"ast":null,"code":"var _jsxFileName = \"/Users/dheeraj/Desktop/To-Do App/todo-frontend/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography, TextField, Button, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n\n  // Replace with your actual project and user IDs\n  const projectId = 1;\n  const userId = 1;\n  const createTask = e => {\n    e.preventDefault();\n    const newTask = {\n      title,\n      description,\n      dueDate,\n      status: 'OPEN'\n    };\n    fetch(`http://localhost:8080/api/tasks?projectId=${projectId}&userId=${userId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTask)\n    }).then(response => response.json()).then(data => {\n      console.log('Task created:', data);\n      // Clear form fields after creation\n      setTitle('');\n      setDescription('');\n      setDueDate('');\n      // Refresh the page or update state in TaskList component as needed\n      window.location.reload();\n    }).catch(error => console.error('Error creating task:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      marginBottom: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        gutterBottom: true,\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: createTask,\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Title\",\n          variant: \"outlined\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Description\",\n          variant: \"outlined\",\n          multiline: true,\n          rows: 3,\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Due Date\",\n          type: \"date\",\n          InputLabelProps: {\n            shrink: true\n          },\n          variant: \"outlined\",\n          value: dueDate,\n          onChange: e => setDueDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"YbXCse7ZAglTdO948A2hkY9z/jE=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","TextField","Button","Box","jsxDEV","_jsxDEV","TaskForm","_s","title","setTitle","description","setDescription","dueDate","setDueDate","projectId","userId","createTask","e","preventDefault","newTask","status","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","window","location","reload","catch","error","sx","marginBottom","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","display","flexDirection","gap","label","value","onChange","target","required","multiline","rows","type","InputLabelProps","shrink","color","_c","$RefreshReg$"],"sources":["/Users/dheeraj/Desktop/To-Do App/todo-frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent, Typography, TextField, Button, Box } from '@mui/material';\n\nfunction TaskForm() {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n\n  // Replace with your actual project and user IDs\n  const projectId = 1;\n  const userId = 1;\n\n  const createTask = (e) => {\n    e.preventDefault();\n    const newTask = {\n      title,\n      description,\n      dueDate,\n      status: 'OPEN'\n    };\n\n    fetch(`http://localhost:8080/api/tasks?projectId=${projectId}&userId=${userId}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newTask)\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Task created:', data);\n        // Clear form fields after creation\n        setTitle('');\n        setDescription('');\n        setDueDate('');\n        // Refresh the page or update state in TaskList component as needed\n        window.location.reload();\n      })\n      .catch((error) => console.error('Error creating task:', error));\n  };\n\n  return (\n    <Card sx={{ marginBottom: 4 }}>\n      <CardContent>\n         <Typography variant=\"h5\" component=\"div\" gutterBottom>\n             Create New Task\n         </Typography>\n         <Box component=\"form\" onSubmit={createTask} sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n           <TextField\n              label=\"Title\"\n              variant=\"outlined\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n           />\n           <TextField\n              label=\"Description\"\n              variant=\"outlined\"\n              multiline\n              rows={3}\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n           />\n           <TextField\n              label=\"Due Date\"\n              type=\"date\"\n              InputLabelProps={{ shrink: true }}\n              variant=\"outlined\"\n              value={dueDate}\n              onChange={(e) => setDueDate(e.target.value)}\n              required\n           />\n           <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Create Task\n           </Button>\n         </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default TaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}