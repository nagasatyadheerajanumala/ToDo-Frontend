{"ast":null,"code":"var _jsxFileName = \"/Users/dheeraj/Desktop/To-Do App/todo-frontend/src/components/Tasks/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography, TextField, Button, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  projectId\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const createTask = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('jwtToken');\n    const newTask = {\n      title,\n      description,\n      dueDate,\n      status: 'OPEN'\n    };\n    try {\n      const response = await fetch(`http://localhost:8080/api/tasks?projectId=${projectId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(newTask)\n      });\n      if (!response.ok) throw new Error('Failed to create task');\n      await response.json();\n      // Clear form fields after success (you could also trigger a refresh in TaskList)\n      setTitle('');\n      setDescription('');\n      setDueDate('');\n      window.location.reload();\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: createTask,\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Title\",\n          variant: \"outlined\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Description\",\n          variant: \"outlined\",\n          multiline: true,\n          rows: 3,\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Due Date\",\n          type: \"date\",\n          InputLabelProps: {\n            shrink: true\n          },\n          variant: \"outlined\",\n          value: dueDate,\n          onChange: e => setDueDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"YbXCse7ZAglTdO948A2hkY9z/jE=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","TextField","Button","Box","jsxDEV","_jsxDEV","TaskForm","projectId","_s","title","setTitle","description","setDescription","dueDate","setDueDate","createTask","e","preventDefault","token","localStorage","getItem","newTask","status","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","Error","json","window","location","reload","error","console","sx","mb","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","onSubmit","display","flexDirection","gap","label","value","onChange","target","required","multiline","rows","type","InputLabelProps","shrink","color","_c","$RefreshReg$"],"sources":["/Users/dheeraj/Desktop/To-Do App/todo-frontend/src/components/Tasks/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent, Typography, TextField, Button, Box } from '@mui/material';\n\nfunction TaskForm({ projectId }) {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n\n  const createTask = async (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem('jwtToken');\n    const newTask = { title, description, dueDate, status: 'OPEN' };\n\n    try {\n      const response = await fetch(`http://localhost:8080/api/tasks?projectId=${projectId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(newTask)\n      });\n      if (!response.ok) throw new Error('Failed to create task');\n      await response.json();\n      // Clear form fields after success (you could also trigger a refresh in TaskList)\n      setTitle('');\n      setDescription('');\n      setDueDate('');\n      window.location.reload();\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n\n  return (\n    <Card sx={{ mb: 4 }}>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Create New Task\n        </Typography>\n        <Box component=\"form\" onSubmit={createTask} sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n          <TextField\n            label=\"Title\"\n            variant=\"outlined\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n          />\n          <TextField\n            label=\"Description\"\n            variant=\"outlined\"\n            multiline\n            rows={3}\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            required\n          />\n          <TextField\n            label=\"Due Date\"\n            type=\"date\"\n            InputLabelProps={{ shrink: true }}\n            variant=\"outlined\"\n            value={dueDate}\n            onChange={(e) => setDueDate(e.target.value)}\n            required\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Create Task\n          </Button>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default TaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}